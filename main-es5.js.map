{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/nav/nav.component.ts","webpack:///src/app/core/nav/nav.component.html","webpack:///src/app/modules/transloco/transloco-root.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","loadChildren","m","HomeModule","AppRoutingModule","RouterModule","AppComponent","translateService","linksKey","consoleInfo","text","style","handleLinks","selectTranslate","pipe","filter","length","first","subscribe","links","urls","link","includes","map","displayConsoleInfo","space","forEach","console","info","AppModule","Title","BrowserModule","HttpClientModule","TranslocoModule","TranslocoRootModule","IconModule","NavComponent","route","translate","titleService","iconService","title","getTitle","addIcon","PrinterFill","lang","userName","setActiveLang","toUpperCase","setTitle","window","print","changeLang","TranslocoHttpLoader","http","get","provide","TRANSLOCO_CONFIG","useValue","translocoConfig","availableLangs","defaultLang","reRenderOnLangChange","prodMode","environment","fallbackLang","missingHandler","useFallbackTranslation","logMissingKey","TRANSLOCO_LOADER","useClass","production","enableProdMode","platformBrowser","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () =>\r\n      import('./modules/home/home.module').then((m) => m.HomeModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { TranslocoService } from '@ngneat/transloco';\r\nimport { filter, first } from 'rxjs/operators';\r\n\r\ninterface ConsoleInfoInterface {\r\n  text: string;\r\n  style?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private readonly linksKey = 'contact.data';\r\n  private readonly consoleInfo: ConsoleInfoInterface[] = [\r\n    {\r\n      text: ' Hello!',\r\n      style: `\r\n              font-weight: bold;\r\n              font-size: 50px;\r\n              color: red;\r\n              text-shadow:\r\n                3px 3px 0 rgb(217,31,38) ,\r\n                6px 6px 0 rgb(226,91,14) ,\r\n                9px 9px 0 rgb(245,221,8) ,\r\n                12px 12px 0 rgb(5,148,68) ,\r\n                15px 15px 0 rgb(2,135,206) ,\r\n                18px 18px 0 rgb(4,77,145) ,\r\n                21px 21px 0 rgb(42,21,113)\r\n               `\r\n    },\r\n    {\r\n      text:\r\n        'Thanks for your interest in my CV.\\n' +\r\n        'Hope you have a nice time checking my site.\\n' +\r\n        'I also encourage you to visit my pages:',\r\n      style: 'color: rgba(255,255,255,0.5)'\r\n    }\r\n  ];\r\n\r\n  constructor(private translateService: TranslocoService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.handleLinks();\r\n  }\r\n\r\n  private handleLinks(): void {\r\n    this.translateService\r\n      .selectTranslate(this.linksKey)\r\n      .pipe(\r\n        filter((e) => e.length),\r\n        first()\r\n      )\r\n      .subscribe((links) => {\r\n        const urls = links\r\n          .filter(({ link }) => link.includes('http'))\r\n          .map(({ link: text }) => ({ text }));\r\n\r\n        this.displayConsoleInfo(urls);\r\n      });\r\n  }\r\n\r\n  private displayConsoleInfo(urls: ConsoleInfoInterface[]) {\r\n    const space: ConsoleInfoInterface = { text: '\\n' };\r\n    [space, ...this.consoleInfo, ...urls, space].forEach(({ text, style }) =>\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      console.info(`%c${text}`, style)\r\n    );\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n<app-nav></app-nav>\r\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NavComponent } from './core/nav/nav.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslocoModule } from '@ngneat/transloco';\r\nimport { TranslocoRootModule } from './modules/transloco/transloco-root.module';\r\nimport { IconModule } from '@ant-design/icons-angular';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NavComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    TranslocoModule,\r\n    TranslocoRootModule,\r\n    IconModule\r\n  ],\r\n  providers: [Title],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IconService } from '@ant-design/icons-angular';\r\nimport { PrinterFill } from '@ant-design/icons-angular/icons';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { TranslocoService } from '@ngneat/transloco';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NavComponent {\r\n  title: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private translate: TranslocoService,\r\n    private titleService: Title,\r\n    private iconService: IconService\r\n  ) {\r\n    this.title = this.titleService.getTitle();\r\n    this.iconService.addIcon(...[PrinterFill]);\r\n  }\r\n\r\n  changeLang(lang: string): void {\r\n    const userName = this.translate.translate('user.name');\r\n    this.translate.setActiveLang(lang);\r\n    this.title = `${userName} - CV ${lang.toUpperCase()}`;\r\n    this.titleService.setTitle(this.title);\r\n  }\r\n\r\n  print(): void {\r\n    window.print();\r\n  }\r\n}\r\n","<nav class=\"nav\">\r\n  <span>{{ title }}</span>\r\n  <div>\r\n    <i antIcon [type]=\"'printer'\" theme=\"fill\" (click)=\"print()\"></i>\r\n  </div>\r\n  <div class=\"nav__country\">\r\n    <img\r\n      routerLink=\"/pl\"\r\n      src=\"https://raw.githubusercontent.com/madebybowtie/FlagKit/master/Assets/PNG/PL%402x.png\"\r\n      alt=\"Poland\"\r\n      (click)=\"changeLang('pl')\"\r\n    />\r\n    <img\r\n      routerLink=\"/en\"\r\n      src=\"https://raw.githubusercontent.com/madebybowtie/FlagKit/master/Assets/PNG/GB%402x.png\"\r\n      alt=\"English\"\r\n      (click)=\"changeLang('en')\"\r\n    />\r\n  </div>\r\n</nav>\r\n","import { Injectable, NgModule } from '@angular/core';\r\nimport {\r\n  TRANSLOCO_CONFIG,\r\n  TRANSLOCO_LOADER,\r\n  Translation,\r\n  TranslocoLoader,\r\n  TranslocoModule,\r\n  translocoConfig\r\n} from '@ngneat/transloco';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TranslocoHttpLoader implements TranslocoLoader {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTranslation(lang: string): Observable<Translation> {\r\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  exports: [TranslocoModule],\r\n  providers: [\r\n    {\r\n      provide: TRANSLOCO_CONFIG,\r\n      useValue: translocoConfig({\r\n        availableLangs: ['en', 'pl'],\r\n        defaultLang: 'en',\r\n        // Remove this option if your application doesn't support changing language in runtime.\r\n        reRenderOnLangChange: true,\r\n        prodMode: environment.production,\r\n        fallbackLang: 'en',\r\n        missingHandler: {\r\n          // It will use the first language set in the `fallbackLang` property\r\n          useFallbackTranslation: true,\r\n          logMissingKey: false\r\n        },\r\n      })\r\n    },\r\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\r\n  ]\r\n})\r\nexport class TranslocoRootModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"]}